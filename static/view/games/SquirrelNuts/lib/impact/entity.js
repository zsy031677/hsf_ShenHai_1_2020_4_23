ig.module("impact.entity").requires("impact.animation","impact.impact").defines(function(){"use strict";ig.Entity=ig.Class.extend({id:0,settings:{},size:{x:16,y:16},offset:{x:0,y:0},pos:{x:0,y:0},last:{x:0,y:0},vel:{x:0,y:0},accel:{x:0,y:0},friction:{x:0,y:0},maxVel:{x:100,y:100},zIndex:0,gravityFactor:1,standing:!1,bounciness:0,minBounceVelocity:40,anims:{},animSheet:null,currentAnim:null,health:10,type:0,checkAgainst:0,collides:0,_killed:!1,slopeStanding:{min:44..toRad(),max:136..toRad()},init:function(i,s,t){this.id=++ig.Entity._lastId,this.pos.x=this.last.x=i,this.pos.y=this.last.y=s,ig.merge(this,t)},reset:function(i,s,t){var e=this.constructor.prototype;this.pos.x=i,this.pos.y=s,this.last.x=i,this.last.y=s,this.vel.x=e.vel.x,this.vel.y=e.vel.y,this.accel.x=e.accel.x,this.accel.y=e.accel.y,this.health=e.health,this._killed=e._killed,this.standing=e.standing,this.type=e.type,this.checkAgainst=e.checkAgainst,this.collides=e.collides,ig.merge(this,t)},addAnim:function(i,s,t,e){if(!this.animSheet)throw"No animSheet to add the animation "+i+" to.";var n=new ig.Animation(this.animSheet,s,t,e);return this.anims[i]=n,this.currentAnim||(this.currentAnim=n),n},update:function(){this.last.x=this.pos.x,this.last.y=this.pos.y,this.vel.y+=ig.game.gravity*ig.system.tick*this.gravityFactor,this.vel.x=this.getNewVelocity(this.vel.x,this.accel.x,this.friction.x,this.maxVel.x),this.vel.y=this.getNewVelocity(this.vel.y,this.accel.y,this.friction.y,this.maxVel.y);var i=this.vel.x*ig.system.tick,s=this.vel.y*ig.system.tick,t=ig.game.collisionMap.trace(this.pos.x,this.pos.y,i,s,this.size.x,this.size.y);this.handleMovementTrace(t),this.currentAnim&&this.currentAnim.update()},getNewVelocity:function(i,s,t,e){if(s)return(i+s*ig.system.tick).limit(-e,e);if(t){var n=t*ig.system.tick;return i-n>0?i-n:i+n<0?i+n:0}return i.limit(-e,e)},handleMovementTrace:function(i){if(this.standing=!1,i.collision.y&&(this.bounciness>0&&Math.abs(this.vel.y)>this.minBounceVelocity?this.vel.y*=-this.bounciness:(this.vel.y>0&&(this.standing=!0),this.vel.y=0)),i.collision.x&&(this.bounciness>0&&Math.abs(this.vel.x)>this.minBounceVelocity?this.vel.x*=-this.bounciness:this.vel.x=0),i.collision.slope){var s=i.collision.slope;if(this.bounciness>0){var t=this.vel.x*s.nx+this.vel.y*s.ny;this.vel.x=(this.vel.x-s.nx*t*2)*this.bounciness,this.vel.y=(this.vel.y-s.ny*t*2)*this.bounciness}else{var e=s.x*s.x+s.y*s.y,n=(this.vel.x*s.x+this.vel.y*s.y)/e;this.vel.x=s.x*n,this.vel.y=s.y*n;var o=Math.atan2(s.x,s.y);o>this.slopeStanding.min&&o<this.slopeStanding.max&&(this.standing=!0)}}this.pos=i.pos},draw:function(){this.currentAnim&&this.currentAnim.draw(this.pos.x-this.offset.x-ig.game._rscreen.x,this.pos.y-this.offset.y-ig.game._rscreen.y)},kill:function(){ig.game.removeEntity(this)},receiveDamage:function(i,s){this.health-=i,this.health<=0&&this.kill()},touches:function(i){return!(this.pos.x>=i.pos.x+i.size.x||this.pos.x+this.size.x<=i.pos.x||this.pos.y>=i.pos.y+i.size.y||this.pos.y+this.size.y<=i.pos.y)},distanceTo:function(i){var s=this.pos.x+this.size.x/2-(i.pos.x+i.size.x/2),t=this.pos.y+this.size.y/2-(i.pos.y+i.size.y/2);return Math.sqrt(s*s+t*t)},angleTo:function(i){return Math.atan2(i.pos.y+i.size.y/2-(this.pos.y+this.size.y/2),i.pos.x+i.size.x/2-(this.pos.x+this.size.x/2))},check:function(i){},collideWith:function(i,s){},ready:function(){},erase:function(){}}),ig.Entity._lastId=0,ig.Entity.COLLIDES={NEVER:0,LITE:1,PASSIVE:2,ACTIVE:4,FIXED:8},ig.Entity.TYPE={NONE:0,A:1,B:2,BOTH:3},ig.Entity.checkPair=function(i,s){i.checkAgainst&s.type&&i.check(s),s.checkAgainst&i.type&&s.check(i),i.collides&&s.collides&&i.collides+s.collides>ig.Entity.COLLIDES.ACTIVE&&ig.Entity.solveCollision(i,s)},ig.Entity.solveCollision=function(i,s){var t=null;i.collides==ig.Entity.COLLIDES.LITE||s.collides==ig.Entity.COLLIDES.FIXED?t=i:s.collides!=ig.Entity.COLLIDES.LITE&&i.collides!=ig.Entity.COLLIDES.FIXED||(t=s),i.last.x+i.size.x>s.last.x&&i.last.x<s.last.x+s.size.x?(i.last.y<s.last.y?ig.Entity.seperateOnYAxis(i,s,t):ig.Entity.seperateOnYAxis(s,i,t),i.collideWith(s,"y"),s.collideWith(i,"y")):i.last.y+i.size.y>s.last.y&&i.last.y<s.last.y+s.size.y&&(i.last.x<s.last.x?ig.Entity.seperateOnXAxis(i,s,t):ig.Entity.seperateOnXAxis(s,i,t),i.collideWith(s,"x"),s.collideWith(i,"x"))},ig.Entity.seperateOnXAxis=function(i,s,t){var e=i.pos.x+i.size.x-s.pos.x;if(t){var n=i===t?s:i;t.vel.x=-t.vel.x*t.bounciness+n.vel.x;var o=ig.game.collisionMap.trace(t.pos.x,t.pos.y,t==i?-e:e,0,t.size.x,t.size.y);t.pos.x=o.pos.x}else{var l=(i.vel.x-s.vel.x)/2;i.vel.x=-l,s.vel.x=l;var a=ig.game.collisionMap.trace(i.pos.x,i.pos.y,-e/2,0,i.size.x,i.size.y);i.pos.x=Math.floor(a.pos.x);var y=ig.game.collisionMap.trace(s.pos.x,s.pos.y,e/2,0,s.size.x,s.size.y);s.pos.x=Math.ceil(y.pos.x)}},ig.Entity.seperateOnYAxis=function(i,s,t){var e=i.pos.y+i.size.y-s.pos.y;if(t){var n=i===t?s:i;t.vel.y=-t.vel.y*t.bounciness+n.vel.y;a=0;t==i&&Math.abs(t.vel.y-n.vel.y)<t.minBounceVelocity&&(t.standing=!0,a=n.vel.x*ig.system.tick);var o=ig.game.collisionMap.trace(t.pos.x,t.pos.y,a,t==i?-e:e,t.size.x,t.size.y);t.pos.y=o.pos.y,t.pos.x=o.pos.x}else if(ig.game.gravity&&(s.standing||i.vel.y>0)){y=ig.game.collisionMap.trace(i.pos.x,i.pos.y,0,-(i.pos.y+i.size.y-s.pos.y),i.size.x,i.size.y);i.pos.y=y.pos.y,i.bounciness>0&&i.vel.y>i.minBounceVelocity?i.vel.y*=-i.bounciness:(i.standing=!0,i.vel.y=0)}else{var l=(i.vel.y-s.vel.y)/2;i.vel.y=-l,s.vel.y=l;var a=s.vel.x*ig.system.tick,y=ig.game.collisionMap.trace(i.pos.x,i.pos.y,a,-e/2,i.size.x,i.size.y);i.pos.y=y.pos.y;var h=ig.game.collisionMap.trace(s.pos.x,s.pos.y,0,e/2,s.size.x,s.size.y);s.pos.y=h.pos.y}}});